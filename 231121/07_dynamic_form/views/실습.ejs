<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- jQuery CDN -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>

    <!-- axios CDN -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <title>실습</title>
    <style>
        .success {
            color: blue;
            font-weight: 700;
        }
        .errer {
            color: red;
            font-weight: 700;
        }
    </style>
</head>
<body>
    <!-- get 방식 -->
    <h2>GET 실습</h2>
    <form name="good">
        <label for="name">이름</label>
        <input type="text" name="name" >
        <br>
        <fieldset>
            <legend>성별</legend>
            <input type="checkbox" name="gender" value="남자">남자
            <input type="checkbox" name="gender" value="여자">여자
        </fieldset>
        <br>
        <Fieldset>
            <legend>생년월일</legend>
            <select name="birth" id="">
                <% for(let i=0; i<50; i++) { %>
                    <option value="<%= 2020 - i %>"><%= 2020 - i %></option>
                <% } %>
            </select>
            <label for="">년</label>
            <select name="birth" id="">
                <% for(let i=0; i<12; i++) { %>
                    <option value="<%= i + 1 %>"><%= i + 1 %></option>
                <% } %>
            </select>
            <label for="">월</label>
            <select name="birth" id="">
                <% for(let i=0; i<31; i++) { %>
                    <option value="<%= i + 1 %>"><%= i + 1 %></option>
                <% } %>
            </select>
            <label for="">일</label>
        </Fieldset>
        <br>
        <Fieldset>
            <legend>관심사</legend>
            <input type="checkbox" name="hobby" value="여행">여행
            <input type="checkbox" name="hobby" value="패션">패션
            <input type="checkbox" name="hobby" value="음식">음식
        </Fieldset>
        <br>

        <button type="button" onclick="axiosGet()">회원가입</button>
        <div class="result"></div>
    </form>
    <br><br><br><br><br>


    <h2>POST 실습</h2>
    <!-- post 방식 -->
    <form name="good2">
        <label for="name">이름</label>
        <input type="text" name="name" >
        <br>
        <fieldset>
            <legend>성별</legend>
            <input type="checkbox" name="gender" value="남자">남자
            <input type="checkbox" name="gender" value="여자">여자
        </fieldset>
        <br>
        <Fieldset>
            <legend>생년월일</legend>
            <select name="birth" id="">
                <% for(let i=0; i<50; i++) { %>
                    <option value="<%= 2020 - i %>"><%= 2020 - i %></option>
                <% } %>
            </select>
            <label for="">년</label>
            <select name="birth" id="">
                <% for(let i=0; i<12; i++) { %>
                    <option value="<%= i + 1 %>"><%= i + 1 %></option>
                <% } %>
            </select>
            <label for="">월</label>
            <select name="birth" id="">
                <% for(let i=0; i<31; i++) { %>
                    <option value="<%= i + 1 %>"><%= i + 1 %></option>
                <% } %>
            </select>
            <label for="">일</label>
        </Fieldset>
        <br>
        <Fieldset>
            <legend>관심사</legend>
            <input type="checkbox" name="hobby" value="여행">여행
            <input type="checkbox" name="hobby" value="패션">패션
            <input type="checkbox" name="hobby" value="음식">음식
        </Fieldset>
        <br>
        <fieldset>
            <legend>선택</legend>
            <label for="">좋아하는 색상</label>
            <input type="color" name="color" id="">
            <br>
            <label for="">좋아하는 숫자</label>
            <input type="number" name="number" id="">
        </fieldset>
        <button>회원가입</button>
    </form>
    <br><br><br><br>
    <!-- axios 실습 -->
    <form name="good3">
        <div>
            <label for="ID">ID</label>
            <input type="text" name="ID" id="ID" placeholder="ID">
        </div>
        <div>
            <label for="PW">PW</label>
            <input type="password" name="PW" id="PW" placeholder="password">
        </div>
        <button type="button" onclick="axiosPost()">로그인</button>
        <div class="result2"></div>
    </form>
    <br><br><br><br>

    <script>
        const resultBox = document.querySelector('.result');
        const resultBox2 = document.querySelector('.result2');
        /* 내가 한 것.
        function axiosGet() {
            const form = document.forms['good'];

            // 선택된 성별 값을 검색
            const gender = form.querySelector('input[name="gender"]:checked').value;

            // 선택된 생년월일 값 검색
            const birthYear = form.elements['birth'][0].value;
            const birthMonth = form.elements['birth'][1].value;
            const birthYDay = form.elements['birth'][2].value;
            const birth = `${birthYear}년 ${birthMonth}월 ${birthYDay}일`;

            // 선택된 취미 값 검색
            const hobby = Array.from(form.elements['hobby'])    // 배열메서드를 사용하기 위해 배열로 변환.
            .filter(checkbox => checkbox.checked)               // checked 속성이 true인 것만 필터링
            .map(checkbox =>checkbox.value)                     // value 속성을 추출하여 새로운 배열 생성.
            .join(',');                                         // 공백을 연결하여 하나의 문자열로 만들어줌.

            const data = {
                name: form.name.value,
                gender: gender,
                birth: birth,
                hobby: hobby
            };
            axios({
                method: 'get',
                url: '/quest',
                params: data
            }).then((response) => {

                console.log(response.data);
                const data = response.data;

                resultBox.textContent = `${data.name} 님의 성별은 ${data.gender}입니다. 
                생년월일은 ${data.birth}이며 취미는 ${data.hobby}를 가지고 있습니다.`;
            }).catch((error) => {
                resultBox.textContent = `Error! 발생!`;
            })
        }
        function axiosPost() {
            const form = document.forms['good3'];
            const data = {
                ID: form.elements['ID'].value,
                PW: form.elements['PW'].value
            };
            axios({
                method: 'post',
                url: '/quest',
                data: data
            }).then((response) => {
                // const data = response.data;
                // ID, PW는 내가 입력한 값.
                // const { ID, PW } = response.data;

                const {success} = response.data;    // 객체니까 한개여도 {}로 표시해야한다. 모든 구조 분할 // 구조 분할은 key값으로 구분한다.
                console.log(response.data);
                if(success==true) {
                    // 로그인 성공
                    resultBox2.style.color = 'blue';
                    resultBox2.textContent = '로그인 성공!';
                } else {
                    // 로그인 실패
                    resultBox2.style.color = 'red';
                    resultBox2.textContent = '로그인 실패, 아이디 또는 비밀번호를 다시 확인해주세요.'
                }
            }).catch((error) => {
                resultBox2.textContent = `Error! 발생!`;
            })
        }
        */
        // 리더님 풀이.
        function axiosGet() {
            const form = document.forms['good'];
            console.log(form.hobby.value);  // value라는 속성에 접근 O => 하나의 요소로 반환(form.username) 
            console.log(form.hobby);        // value라는 속성에 접근 X => NodeList 형태로 반환. (form.hobby) => name = hobby 라는 태그가 많아서

            // hobby checkbox 정보 출력하고 싶은 경우, 다음과 같이 새로운 배열로 정의
            // // case 1, forEach 반복문 사용
            // const hobbies = [];
            // form.hobby.array.forEach((elem) => {
            //     if(elem.checked) {  // 체크가 되어있으면 ture 반환.
            //         hobbies.push(elem.value)
            //     }
            // })

            // case 2. filter, map 반복문 사용
            // Array.from(arrayLike) : 유사 배열 객체를 배열로 변환해준다.
            const hobbies = Array.from(form.hobby)
            .filter((elem) => elem.checked === ture)
            .map((elem) => elem.value);

            const data = {
                name : form.name.value,
                gender : form.gender.value,
                birthYear : form.birthYear.value,
                birthMonth : form.birthMonth.value,
                birthDay : form.birthDay.value,
                hobby: hobbies,
            }
            axios ({
                method: 'get',
                url: '/quest',
                params: data
            }).then((response) => {
                const { name, gender, birthYear, birthMonth, birthDay, hobby} = response.data;
                resultBox.textContent = `${name}님 환영합니다.!
                생년월일은 ${birthYear}년 ${birthMonth}월 ${birthDay}일!
                취미는 ${hobby}`;
            })
        }
        function axiosPost() {
            const form = document.forms['good3'];

            const data = {
                Id: form.ID.value,
                PW: form.PW.value
            }

        // form validation
        if(!form.ID.checkValidity() || !form.PW.checkValidity()) {
            resultBox2.textContent = '아이디와 패스워드는 필수 값입니다.'
            return;
        }

        axios({
            method: 'post',
            url: '/quest',
            data: data          // 'post'는 data로
        }).then((response) => {
            console.log(response.data);

            if(response.data.isSuccess) {
                // 로그인 성공
                resultBox2.textContent = `${response.data.userInfo.ID}님! 로그인성공!`
                resultBox2.classList.remove('error');
                resultBox2.classList.add('success');
            } else {
                resultBox2.textContent = `아이디 또는 패스워드가 잘못됐습니다.`
                resultBox2.classList.remove('success');
                resultBox2.classList.add('error');
            }
        })
        }
    </script>
</body>
</html>
